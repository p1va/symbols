lsps:
  typescript:
    command: 'typescript-language-server --stdio'
    extensions:
      '.js': 'javascript'
      '.mjs': 'javascript'
      '.cjs': 'javascript'
      '.jsx': 'javascriptreact'
      '.ts': 'typescript'
      '.mts': 'typescript'
      '.cts': 'typescript'
      '.tsx': 'typescriptreact'
      '.json': 'json'
    workspace_files: ['package.json', 'tsconfig.json']
    diagnostics:
      strategy: 'push' # TypeScript sends diagnostics via notifications
      wait_timeout_ms: 2000 # Wait 3 seconds for diagnostics after file operations

  pyright:
    command: 'pyright-langserver --stdio'
    extensions:
      '.py': 'python'
    workspace_files:
      ['pyproject.toml', 'requirements.txt', 'setup.py', 'Pipfile']
    diagnostics:
      strategy: 'pull'

  go:
    command: 'gopls'
    extensions:
      '.go': 'go'
    workspace_files: ['go.mod', 'go.work']
    diagnostics:
      strategy: 'pull'
      wait_timeout_ms: 2000
    environment:
      GOPATH: '/usr/local/go'
      GOCACHE: '/tmp/go-build'
      GOMODCACHE: '/tmp/go/pkg/mod'

  see-sharp:
    command: "/tmp/lsp/Microsoft.CodeAnalysis.LanguageServer --logLevel=Information --extensionLogDirectory=/tmp/lsp-logs --stdio"
    workspace_loader: 'csharp'
    extensions:
      '.cs': 'csharp'
    workspace_files:
      - '*.sln'
      - '*.csproj'
    diagnostics:
      strategy: 'pull'
    symbols:
      max_depth: null
      kinds: []