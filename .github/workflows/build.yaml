name: Build & Test

on:
  - push
  - pull_request

jobs:
  unit-tests:
    name: 🧪 Build & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup and Install
        uses: ./.github/actions/setup-and-install

      - name: 🎨 Format check
        run: pnpm format --check

      - name: 🔍 Lint
        run: pnpm lint

      - name: ⚒️ Build
        run: pnpm build

      - name: 🧪 Run unit tests
        run: pnpm test:unit

      - name: 📊 Upload unit test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-report
          path: test-results/
          retention-days: 30

  integration-typescript:
    name: 🔷 TypeScript Integration
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup and Install
        uses: ./.github/actions/setup-and-install

      - name: Install TypeScript Language Server
        run: |
          npm install -g typescript typescript-language-server
          which typescript-language-server

      - name: Build project
        run: pnpm build

      - name: Run TypeScript integration tests
        run: pnpm test:integration:typescript:ci
        timeout-minutes: 10

      - name: 📊 Upload TypeScript integration test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: typescript-integration-report
          path: test-results/
          retention-days: 30

  integration-python:
    name: 🐍 Pyright Integration
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup and Install
        uses: ./.github/actions/setup-and-install

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Pyright
        run: |
          npm install -g pyright
          which pyright-langserver

      - name: Build project
        run: pnpm build

      - name: Run Python integration tests
        run: pnpm test:integration:python:ci
        timeout-minutes: 10

      - name: 📊 Upload Python integration test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: python-integration-report
          path: test-results/
          retention-days: 30

  integration-csharp:
    name: 🟦 C# Integration
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup and Install
        uses: ./.github/actions/setup-and-install

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Install C# Language Server (Roslyn)
        run: |
          dotnet restore scripts/ServerDownload.csproj \
            /p:Platform=linux-x64 \
            /p:ServerPath=$HOME/.csharp-lsp/
          
          $HOME/.csharp-lsp/Microsoft.CodeAnalysis.LanguageServer --version

        # In CI we run against the build output
      - name: Build project
        run: pnpm build

      - name: 🟦 Run C# integration tests
        run: pnpm test:integration:csharp:ci
        timeout-minutes: 10

      - name: 📊 Upload C# integration test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: csharp-integration-report
          path: test-results/
          retention-days: 30

  test-summary:
    name: ✅ Test Summary
    runs-on: ubuntu-latest
    needs:
      [
        unit-tests,
        integration-typescript,
        integration-python,
        integration-csharp,
      ]
    if: always()
    steps:
      - name: ✅ Check test results
        run: |
          if [[ "${{ needs.unit-tests.result }}" != "success" ]]; then
            echo "❌ Unit tests failed"
            exit 1
          fi
          if [[ "${{ needs.integration-typescript.result }}" != "success" ]]; then
            echo "❌ TypeScript integration tests failed"
            exit 1
          fi
          if [[ "${{ needs.integration-python.result }}" != "success" ]]; then
            echo "❌ Python integration tests failed"
            exit 1
          fi
          if [[ "${{ needs.integration-csharp.result }}" != "success" ]]; then
            echo "❌ C# integration tests failed"
            exit 1
          fi
          echo "✅ All tests passed successfully!"
