name: Build & Test

on:
  - push
  - pull_request

jobs:
  # ============================================================================
  # UNIT TESTS - Fast feedback, runs on all events
  # ============================================================================
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🎨 Format check
        run: pnpm format --check

      - name: 🔍 Lint
        run: pnpm lint

      - name: ⚒️ Build
        run: pnpm build

      - name: 🧪 Run unit tests with coverage
        run: pnpm test:unit:coverage

      - name: 📊 Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  # ============================================================================
  # INTEGRATION TESTS - Slower, language-specific
  # ============================================================================
  integration-typescript:
    name: 🔷 TypeScript Integration
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🙊 Install TypeScript Language Server
        run: |
          npm install -g typescript typescript-language-server
          which typescript-language-server

      - name: ⚒️ Build project
        run: pnpm build

      - name: 🔷 Run TypeScript integration tests
        run: pnpm test:integration:typescript
        timeout-minutes: 10

  integration-python:
    name: 🐍 Python Integration
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🙊 Install Python Language Server (Pylsp)
        run: |
          pip install python-lsp-server[all]
          which pylsp

      - name: ⚒️ Build project
        run: pnpm build

      - name: 🐍 Run Python integration tests
        run: pnpm test:integration:python
        timeout-minutes: 10

  integration-csharp:
    name: 🟦 C# Integration
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 🟦 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🙊 Install C# Language Server (OmniSharp)
        run: |
          dotnet tool install -g csharp-ls
          which csharp-ls

      - name: ⚒️ Build project
        run: pnpm build

      - name: 🟦 Run C# integration tests
        run: pnpm test:integration:csharp
        timeout-minutes: 10

  # ============================================================================
  # SUMMARY JOB - Ensures all tests pass before merge
  # ============================================================================
  test-summary:
    name: ✅ Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-typescript, integration-python, integration-csharp]
    if: always()
    steps:
      - name: ✅ Check test results
        run: |
          if [[ "${{ needs.unit-tests.result }}" != "success" ]]; then
            echo "❌ Unit tests failed"
            exit 1
          fi
          if [[ "${{ needs.integration-typescript.result }}" != "success" ]]; then
            echo "❌ TypeScript integration tests failed"
            exit 1
          fi
          if [[ "${{ needs.integration-python.result }}" != "success" ]]; then
            echo "❌ Python integration tests failed"
            exit 1
          fi
          if [[ "${{ needs.integration-csharp.result }}" != "success" ]]; then
            echo "❌ C# integration tests failed"
            exit 1
          fi
          echo "✅ All tests passed successfully!"